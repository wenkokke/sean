
-- * Type Environments

-- |Represents the type environment where the algorithm W
--  can lookup previously inferred types of variables.
type TyEnv = map {Var} Ty

attr Lexicon Decls Decl Tm Ident
  chn env :: TyEnv

-- |Propagation of type environment along the declarations.
sem Decl
   | TmDecl lhs.env  = @lhs.env
   | TyDecl lhs.env  = case @ty of
                       Just ty -> Map.insert @name ty @lhs.env
                       Nothing -> @lhs.env

{
class    HasTyEnv ty      where tyEnv :: ty -> TyEnv
instance HasTyEnv Tm      where tyEnv = env_Syn_Tm . syn
instance HasTyEnv Decl    where tyEnv = env_Syn_Decl . syn
instance HasTyEnv Lexicon where tyEnv = env_Syn_Lexicon . syn
}
